using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Linq;
using TensorShader;
using TensorShader.Operators.Connection2D;
using TensorShaderCudaBackend.API;

namespace TensorShaderTest.Operators.Connection2D {
    [TestClass]
    public class ChannelwiseConvolutionTest {
        [TestMethod]
        public void ExecuteFPTest() {
            TensorShaderCudaBackend.Environment.Precision = TensorShaderCudaBackend.Environment.PrecisionMode.Float;
            TensorShaderCudaBackend.Environment.CudnnEnabled = false;

            float max_err = 0;

            foreach (int batch in new int[] { 1, 2 }) {
                foreach (int channels in new int[] { 1, 2, 3, 4, 5, 10, 15, 20 }) {
                    foreach (int kheight in new int[] { 1, 3, 5 }) {
                        foreach (int kwidth in new int[] { 1, 3, 5 }) {
                            foreach (int inheight in new int[] { 8, 9, 19, 23 }) {
                                foreach (int inwidth in new int[] { 8, 9, 13, 17 }) {
                                    int outwidth = inwidth - kwidth + 1, outheight = inheight - kheight + 1;

                                    float[] xval = (new float[inwidth * inheight * channels * batch]).Select((_, idx) => idx * 1e-3f).ToArray();
                                    float[] wval = (new float[kwidth * kheight * channels]).Select((_, idx) => idx * 1e-3f).Reverse().ToArray();

                                    Map2D x = new(channels, inwidth, inheight, batch, xval);
                                    Filter2D w = new(channels, 1, kwidth, kheight, wval);

                                    Map2D y = Reference(x, w, kwidth, kheight);

                                    OverflowCheckedTensor x_tensor = new(Shape.Map2D(channels, inwidth, inheight, batch), xval);
                                    OverflowCheckedTensor w_tensor = new(Shape.Kernel2D(channels, 1, kwidth, kheight), wval);

                                    OverflowCheckedTensor y_tensor = new(Shape.Map2D(channels, outwidth, outheight, batch));

                                    ChannelwiseConvolution ope = new(inwidth, inheight, channels, kwidth, kheight, batch);

                                    ope.Execute(x_tensor, w_tensor, y_tensor);

                                    float[] y_expect = y.ToArray();
                                    float[] y_actual = y_tensor.State.Value;

                                    CollectionAssert.AreEqual(xval, x_tensor.State.Value);
                                    CollectionAssert.AreEqual(wval, w_tensor.State.Value);

                                    AssertError.Tolerance(y_expect, y_actual, 1e-6f, 1e-4f, ref max_err, $"mismatch value {channels},{kwidth},{inwidth},{inheight},{batch}");

                                    Console.WriteLine($"pass: {channels},{kwidth},{kheight},{inwidth},{inheight},{batch}");
                                }
                            }
                        }
                    }
                }
            }

            Console.WriteLine($"maxerr:{max_err}");
        }

        [TestMethod]
        public void ExecuteFFPTest() {
            TensorShaderCudaBackend.Environment.CudnnEnabled = false;
            TensorShaderCudaBackend.Environment.Precision = TensorShaderCudaBackend.Environment.PrecisionMode.FloatFloat;

            float max_err = 0;

            foreach (int batch in new int[] { 1, 2 }) {
                foreach (int channels in new int[] { 1, 2, 3, 4, 5, 10, 15, 20 }) {
                    foreach (int kheight in new int[] { 1, 3, 5 }) {
                        foreach (int kwidth in new int[] { 1, 3, 5 }) {
                            foreach (int inheight in new int[] { 8, 9, 19, 23 }) {
                                foreach (int inwidth in new int[] { 8, 9, 13, 17 }) {
                                    int outwidth = inwidth - kwidth + 1, outheight = inheight - kheight + 1;

                                    float[] xval = (new float[inwidth * inheight * channels * batch]).Select((_, idx) => idx * 1e-3f).ToArray();
                                    float[] wval = (new float[kwidth * kheight * channels]).Select((_, idx) => idx * 1e-3f).Reverse().ToArray();

                                    Map2D x = new(channels, inwidth, inheight, batch, xval);
                                    Filter2D w = new(channels, 1, kwidth, kheight, wval);

                                    Map2D y = Reference(x, w, kwidth, kheight);

                                    OverflowCheckedTensor x_tensor = new(Shape.Map2D(channels, inwidth, inheight, batch), xval);
                                    OverflowCheckedTensor w_tensor = new(Shape.Kernel2D(channels, 1, kwidth, kheight), wval);

                                    OverflowCheckedTensor y_tensor = new(Shape.Map2D(channels, outwidth, outheight, batch));

                                    ChannelwiseConvolution ope = new(inwidth, inheight, channels, kwidth, kheight, batch);

                                    ope.Execute(x_tensor, w_tensor, y_tensor);

                                    float[] y_expect = y.ToArray();
                                    float[] y_actual = y_tensor.State.Value;

                                    CollectionAssert.AreEqual(xval, x_tensor.State.Value);
                                    CollectionAssert.AreEqual(wval, w_tensor.State.Value);

                                    AssertError.Tolerance(y_expect, y_actual, 1e-7f, 1e-5f, ref max_err, $"mismatch value {channels},{kwidth},{inwidth},{inheight},{batch}");

                                    Console.WriteLine($"pass: {channels},{kwidth},{kheight},{inwidth},{inheight},{batch}");
                                }
                            }
                        }
                    }
                }
            }

            Console.WriteLine($"maxerr:{max_err}");
        }

        [TestMethod]
        public void LargeMapTest() {
            TensorShaderCudaBackend.Environment.CudnnEnabled = false;
            TensorShaderCudaBackend.Environment.Precision = TensorShaderCudaBackend.Environment.PrecisionMode.FloatFloat;

            float max_err = 0;

            Random random = new(1234);

            int batch = 3;
            int channels = 49;
            int kwidth = 5, kheight = 3;
            int inwidth = 250, inheight = 196;
            int outwidth = inwidth - kwidth + 1, outheight = inheight - kheight + 1;

            float[] xval = (new float[inwidth * inheight * channels * batch]).Select((_, idx) => (float)random.NextDouble() * 1e-2f).ToArray();
            float[] wval = (new float[kwidth * kheight * channels]).Select((_, idx) => (float)random.NextDouble() * 1e-2f).ToArray();

            Map2D x = new(channels, inwidth, inheight, batch, xval);
            Filter2D w = new(channels, 1, kwidth, kheight, wval);

            Map2D y = Reference(x, w, kwidth, kheight);

            OverflowCheckedTensor x_tensor = new(Shape.Map2D(channels, inwidth, inheight, batch), xval);
            OverflowCheckedTensor w_tensor = new(Shape.Kernel2D(channels, 1, kwidth, kheight), wval);

            OverflowCheckedTensor y_tensor = new(Shape.Map2D(channels, outwidth, outheight, batch));

            ChannelwiseConvolution ope = new(inwidth, inheight, channels, kwidth, kheight, batch);

            ope.Execute(x_tensor, w_tensor, y_tensor);

            float[] y_expect = y.ToArray();
            float[] y_actual = y_tensor.State.Value;

            CollectionAssert.AreEqual(xval, x_tensor.State.Value);
            CollectionAssert.AreEqual(wval, w_tensor.State.Value);

            AssertError.Tolerance(y_expect, y_actual, 1e-7f, 1e-5f, ref max_err, $"mismatch value {channels},{kwidth},{inwidth},{inheight},{batch}");

            Console.WriteLine($"pass: {channels},{kwidth},{kheight},{inwidth},{inheight},{batch}");

            Console.WriteLine($"maxerr:{max_err}");
        }

        [TestMethod]
        public void SpeedFPTest() {
            TensorShaderCudaBackend.Environment.Precision = TensorShaderCudaBackend.Environment.PrecisionMode.Float;
            TensorShaderCudaBackend.Environment.CudnnEnabled = false;

            int inwidth = 512, inheight = 512, channels = 31, ksize = 3;
            int outwidth = inwidth - ksize + 1, outheight = inheight - ksize + 1;

            OverflowCheckedTensor x_tensor = new(Shape.Map2D(channels, inwidth, inheight));
            OverflowCheckedTensor w_tensor = new(Shape.Kernel2D(channels, 1, ksize, ksize));

            OverflowCheckedTensor y_tensor = new(Shape.Map2D(channels, outwidth, outheight));

            ChannelwiseConvolution ope = new(inwidth, inheight, channels, ksize, ksize);

            Cuda.Profiler.Initialize("../../../../profiler.nvsetting", "../../nvprofiles/chwise_convolution_2d_fp.nvvp");
            Cuda.Profiler.Start();

            ope.Execute(x_tensor, w_tensor, y_tensor);

            Cuda.Profiler.Stop();
        }

        [TestMethod]
        public void SpeedFFPTest() {
            TensorShaderCudaBackend.Environment.CudnnEnabled = false;
            TensorShaderCudaBackend.Environment.Precision = TensorShaderCudaBackend.Environment.PrecisionMode.FloatFloat;

            int inwidth = 512, inheight = 512, channels = 31, ksize = 3;
            int outwidth = inwidth - ksize + 1, outheight = inheight - ksize + 1;

            OverflowCheckedTensor x_tensor = new(Shape.Map2D(channels, inwidth, inheight));
            OverflowCheckedTensor w_tensor = new(Shape.Kernel2D(channels, 1, ksize, ksize));

            OverflowCheckedTensor y_tensor = new(Shape.Map2D(channels, outwidth, outheight));

            ChannelwiseConvolution ope = new(inwidth, inheight, channels, ksize, ksize);

            Cuda.Profiler.Initialize("../../../../profiler.nvsetting", "../../nvprofiles/chwise_convolution_2d_ffp.nvvp");
            Cuda.Profiler.Start();

            ope.Execute(x_tensor, w_tensor, y_tensor);

            Cuda.Profiler.Stop();
        }

        public static Map2D Reference(Map2D x, Filter2D w, int kwidth, int kheight) {
            int channels = x.Channels, batch = x.Batch;
            int inw = x.Width, inh = x.Height, outw = inw - kwidth + 1, outh = inh - kheight + 1;

            Map2D y = new(channels, outw, outh, batch);

            for (int kx, ky = 0; ky < kheight; ky++) {
                for (kx = 0; kx < kwidth; kx++) {
                    for (int th = 0; th < batch; th++) {
                        for (int ox, oy = 0; oy < outh; oy++) {
                            for (ox = 0; ox < outw; ox++) {
                                for (int ch = 0; ch < channels; ch++) {
                                    y[ch, ox, oy, th] += x[ch, kx + ox, ky + oy, th] * w[ch, 0, kx, ky];
                                }
                            }
                        }
                    }
                }
            }

            return y;
        }

        [TestMethod]
        public void ReferenceTest() {
            int channels = 7, kwidth = 3, kheight = 5, inwidth = 13, inheight = 17, batch = 2;
            int outwidth = inwidth - kwidth + 1, outheight = inheight - kheight + 1;

            float[] xval = (new float[batch * inwidth * inheight * channels]).Select((_, idx) => idx * 1e-3f).ToArray();
            float[] wval = (new float[kwidth * kheight * channels]).Select((_, idx) => idx * 1e-3f).Reverse().ToArray();

            Map2D x = new(channels, inwidth, inheight, batch, xval);
            Filter2D w = new(channels, 1, kwidth, kheight, wval);

            Map2D y = Reference(x, w, kwidth, kheight);

            float[] y_expect = {
                9.8105000e-02f,  9.6080000e-02f,  9.4025000e-02f,  9.1940000e-02f,  8.9825000e-02f,  8.7680000e-02f,  8.5505000e-02f,
                1.0388000e-01f,  1.0175000e-01f,  9.9590000e-02f,  9.7400000e-02f,  9.5180000e-02f,  9.2930000e-02f,  9.0650000e-02f,
                1.0965500e-01f,  1.0742000e-01f,  1.0515500e-01f,  1.0286000e-01f,  1.0053500e-01f,  9.8180000e-02f,  9.5795000e-02f,
                1.1543000e-01f,  1.1309000e-01f,  1.1072000e-01f,  1.0832000e-01f,  1.0589000e-01f,  1.0343000e-01f,  1.0094000e-01f,
                1.2120500e-01f,  1.1876000e-01f,  1.1628500e-01f,  1.1378000e-01f,  1.1124500e-01f,  1.0868000e-01f,  1.0608500e-01f,
                1.2698000e-01f,  1.2443000e-01f,  1.2185000e-01f,  1.1924000e-01f,  1.1660000e-01f,  1.1393000e-01f,  1.1123000e-01f,
                1.3275500e-01f,  1.3010000e-01f,  1.2741500e-01f,  1.2470000e-01f,  1.2195500e-01f,  1.1918000e-01f,  1.1637500e-01f,
                1.3853000e-01f,  1.3577000e-01f,  1.3298000e-01f,  1.3016000e-01f,  1.2731000e-01f,  1.2443000e-01f,  1.2152000e-01f,
                1.4430500e-01f,  1.4144000e-01f,  1.3854500e-01f,  1.3562000e-01f,  1.3266500e-01f,  1.2968000e-01f,  1.2666500e-01f,
                1.5008000e-01f,  1.4711000e-01f,  1.4411000e-01f,  1.4108000e-01f,  1.3802000e-01f,  1.3493000e-01f,  1.3181000e-01f,
                1.5585500e-01f,  1.5278000e-01f,  1.4967500e-01f,  1.4654000e-01f,  1.4337500e-01f,  1.4018000e-01f,  1.3695500e-01f,
                1.7318000e-01f,  1.6979000e-01f,  1.6637000e-01f,  1.6292000e-01f,  1.5944000e-01f,  1.5593000e-01f,  1.5239000e-01f,
                1.7895500e-01f,  1.7546000e-01f,  1.7193500e-01f,  1.6838000e-01f,  1.6479500e-01f,  1.6118000e-01f,  1.5753500e-01f,
                1.8473000e-01f,  1.8113000e-01f,  1.7750000e-01f,  1.7384000e-01f,  1.7015000e-01f,  1.6643000e-01f,  1.6268000e-01f,
                1.9050500e-01f,  1.8680000e-01f,  1.8306500e-01f,  1.7930000e-01f,  1.7550500e-01f,  1.7168000e-01f,  1.6782500e-01f,
                1.9628000e-01f,  1.9247000e-01f,  1.8863000e-01f,  1.8476000e-01f,  1.8086000e-01f,  1.7693000e-01f,  1.7297000e-01f,
                2.0205500e-01f,  1.9814000e-01f,  1.9419500e-01f,  1.9022000e-01f,  1.8621500e-01f,  1.8218000e-01f,  1.7811500e-01f,
                2.0783000e-01f,  2.0381000e-01f,  1.9976000e-01f,  1.9568000e-01f,  1.9157000e-01f,  1.8743000e-01f,  1.8326000e-01f,
                2.1360500e-01f,  2.0948000e-01f,  2.0532500e-01f,  2.0114000e-01f,  1.9692500e-01f,  1.9268000e-01f,  1.8840500e-01f,
                2.1938000e-01f,  2.1515000e-01f,  2.1089000e-01f,  2.0660000e-01f,  2.0228000e-01f,  1.9793000e-01f,  1.9355000e-01f,
                2.2515500e-01f,  2.2082000e-01f,  2.1645500e-01f,  2.1206000e-01f,  2.0763500e-01f,  2.0318000e-01f,  1.9869500e-01f,
                2.3093000e-01f,  2.2649000e-01f,  2.2202000e-01f,  2.1752000e-01f,  2.1299000e-01f,  2.0843000e-01f,  2.0384000e-01f,
                2.4825500e-01f,  2.4350000e-01f,  2.3871500e-01f,  2.3390000e-01f,  2.2905500e-01f,  2.2418000e-01f,  2.1927500e-01f,
                2.5403000e-01f,  2.4917000e-01f,  2.4428000e-01f,  2.3936000e-01f,  2.3441000e-01f,  2.2943000e-01f,  2.2442000e-01f,
                2.5980500e-01f,  2.5484000e-01f,  2.4984500e-01f,  2.4482000e-01f,  2.3976500e-01f,  2.3468000e-01f,  2.2956500e-01f,
                2.6558000e-01f,  2.6051000e-01f,  2.5541000e-01f,  2.5028000e-01f,  2.4512000e-01f,  2.3993000e-01f,  2.3471000e-01f,
                2.7135500e-01f,  2.6618000e-01f,  2.6097500e-01f,  2.5574000e-01f,  2.5047500e-01f,  2.4518000e-01f,  2.3985500e-01f,
                2.7713000e-01f,  2.7185000e-01f,  2.6654000e-01f,  2.6120000e-01f,  2.5583000e-01f,  2.5043000e-01f,  2.4500000e-01f,
                2.8290500e-01f,  2.7752000e-01f,  2.7210500e-01f,  2.6666000e-01f,  2.6118500e-01f,  2.5568000e-01f,  2.5014500e-01f,
                2.8868000e-01f,  2.8319000e-01f,  2.7767000e-01f,  2.7212000e-01f,  2.6654000e-01f,  2.6093000e-01f,  2.5529000e-01f,
                2.9445500e-01f,  2.8886000e-01f,  2.8323500e-01f,  2.7758000e-01f,  2.7189500e-01f,  2.6618000e-01f,  2.6043500e-01f,
                3.0023000e-01f,  2.9453000e-01f,  2.8880000e-01f,  2.8304000e-01f,  2.7725000e-01f,  2.7143000e-01f,  2.6558000e-01f,
                3.0600500e-01f,  3.0020000e-01f,  2.9436500e-01f,  2.8850000e-01f,  2.8260500e-01f,  2.7668000e-01f,  2.7072500e-01f,
                3.2333000e-01f,  3.1721000e-01f,  3.1106000e-01f,  3.0488000e-01f,  2.9867000e-01f,  2.9243000e-01f,  2.8616000e-01f,
                3.2910500e-01f,  3.2288000e-01f,  3.1662500e-01f,  3.1034000e-01f,  3.0402500e-01f,  2.9768000e-01f,  2.9130500e-01f,
                3.3488000e-01f,  3.2855000e-01f,  3.2219000e-01f,  3.1580000e-01f,  3.0938000e-01f,  3.0293000e-01f,  2.9645000e-01f,
                3.4065500e-01f,  3.3422000e-01f,  3.2775500e-01f,  3.2126000e-01f,  3.1473500e-01f,  3.0818000e-01f,  3.0159500e-01f,
                3.4643000e-01f,  3.3989000e-01f,  3.3332000e-01f,  3.2672000e-01f,  3.2009000e-01f,  3.1343000e-01f,  3.0674000e-01f,
                3.5220500e-01f,  3.4556000e-01f,  3.3888500e-01f,  3.3218000e-01f,  3.2544500e-01f,  3.1868000e-01f,  3.1188500e-01f,
                3.5798000e-01f,  3.5123000e-01f,  3.4445000e-01f,  3.3764000e-01f,  3.3080000e-01f,  3.2393000e-01f,  3.1703000e-01f,
                3.6375500e-01f,  3.5690000e-01f,  3.5001500e-01f,  3.4310000e-01f,  3.3615500e-01f,  3.2918000e-01f,  3.2217500e-01f,
                3.6953000e-01f,  3.6257000e-01f,  3.5558000e-01f,  3.4856000e-01f,  3.4151000e-01f,  3.3443000e-01f,  3.2732000e-01f,
                3.7530500e-01f,  3.6824000e-01f,  3.6114500e-01f,  3.5402000e-01f,  3.4686500e-01f,  3.3968000e-01f,  3.3246500e-01f,
                3.8108000e-01f,  3.7391000e-01f,  3.6671000e-01f,  3.5948000e-01f,  3.5222000e-01f,  3.4493000e-01f,  3.3761000e-01f,
                3.9840500e-01f,  3.9092000e-01f,  3.8340500e-01f,  3.7586000e-01f,  3.6828500e-01f,  3.6068000e-01f,  3.5304500e-01f,
                4.0418000e-01f,  3.9659000e-01f,  3.8897000e-01f,  3.8132000e-01f,  3.7364000e-01f,  3.6593000e-01f,  3.5819000e-01f,
                4.0995500e-01f,  4.0226000e-01f,  3.9453500e-01f,  3.8678000e-01f,  3.7899500e-01f,  3.7118000e-01f,  3.6333500e-01f,
                4.1573000e-01f,  4.0793000e-01f,  4.0010000e-01f,  3.9224000e-01f,  3.8435000e-01f,  3.7643000e-01f,  3.6848000e-01f,
                4.2150500e-01f,  4.1360000e-01f,  4.0566500e-01f,  3.9770000e-01f,  3.8970500e-01f,  3.8168000e-01f,  3.7362500e-01f,
                4.2728000e-01f,  4.1927000e-01f,  4.1123000e-01f,  4.0316000e-01f,  3.9506000e-01f,  3.8693000e-01f,  3.7877000e-01f,
                4.3305500e-01f,  4.2494000e-01f,  4.1679500e-01f,  4.0862000e-01f,  4.0041500e-01f,  3.9218000e-01f,  3.8391500e-01f,
                4.3883000e-01f,  4.3061000e-01f,  4.2236000e-01f,  4.1408000e-01f,  4.0577000e-01f,  3.9743000e-01f,  3.8906000e-01f,
                4.4460500e-01f,  4.3628000e-01f,  4.2792500e-01f,  4.1954000e-01f,  4.1112500e-01f,  4.0268000e-01f,  3.9420500e-01f,
                4.5038000e-01f,  4.4195000e-01f,  4.3349000e-01f,  4.2500000e-01f,  4.1648000e-01f,  4.0793000e-01f,  3.9935000e-01f,
                4.5615500e-01f,  4.4762000e-01f,  4.3905500e-01f,  4.3046000e-01f,  4.2183500e-01f,  4.1318000e-01f,  4.0449500e-01f,
                4.7348000e-01f,  4.6463000e-01f,  4.5575000e-01f,  4.4684000e-01f,  4.3790000e-01f,  4.2893000e-01f,  4.1993000e-01f,
                4.7925500e-01f,  4.7030000e-01f,  4.6131500e-01f,  4.5230000e-01f,  4.4325500e-01f,  4.3418000e-01f,  4.2507500e-01f,
                4.8503000e-01f,  4.7597000e-01f,  4.6688000e-01f,  4.5776000e-01f,  4.4861000e-01f,  4.3943000e-01f,  4.3022000e-01f,
                4.9080500e-01f,  4.8164000e-01f,  4.7244500e-01f,  4.6322000e-01f,  4.5396500e-01f,  4.4468000e-01f,  4.3536500e-01f,
                4.9658000e-01f,  4.8731000e-01f,  4.7801000e-01f,  4.6868000e-01f,  4.5932000e-01f,  4.4993000e-01f,  4.4051000e-01f,
                5.0235500e-01f,  4.9298000e-01f,  4.8357500e-01f,  4.7414000e-01f,  4.6467500e-01f,  4.5518000e-01f,  4.4565500e-01f,
                5.0813000e-01f,  4.9865000e-01f,  4.8914000e-01f,  4.7960000e-01f,  4.7003000e-01f,  4.6043000e-01f,  4.5080000e-01f,
                5.1390500e-01f,  5.0432000e-01f,  4.9470500e-01f,  4.8506000e-01f,  4.7538500e-01f,  4.6568000e-01f,  4.5594500e-01f,
                5.1968000e-01f,  5.0999000e-01f,  5.0027000e-01f,  4.9052000e-01f,  4.8074000e-01f,  4.7093000e-01f,  4.6109000e-01f,
                5.2545500e-01f,  5.1566000e-01f,  5.0583500e-01f,  4.9598000e-01f,  4.8609500e-01f,  4.7618000e-01f,  4.6623500e-01f,
                5.3123000e-01f,  5.2133000e-01f,  5.1140000e-01f,  5.0144000e-01f,  4.9145000e-01f,  4.8143000e-01f,  4.7138000e-01f,
                5.4855500e-01f,  5.3834000e-01f,  5.2809500e-01f,  5.1782000e-01f,  5.0751500e-01f,  4.9718000e-01f,  4.8681500e-01f,
                5.5433000e-01f,  5.4401000e-01f,  5.3366000e-01f,  5.2328000e-01f,  5.1287000e-01f,  5.0243000e-01f,  4.9196000e-01f,
                5.6010500e-01f,  5.4968000e-01f,  5.3922500e-01f,  5.2874000e-01f,  5.1822500e-01f,  5.0768000e-01f,  4.9710500e-01f,
                5.6588000e-01f,  5.5535000e-01f,  5.4479000e-01f,  5.3420000e-01f,  5.2358000e-01f,  5.1293000e-01f,  5.0225000e-01f,
                5.7165500e-01f,  5.6102000e-01f,  5.5035500e-01f,  5.3966000e-01f,  5.2893500e-01f,  5.1818000e-01f,  5.0739500e-01f,
                5.7743000e-01f,  5.6669000e-01f,  5.5592000e-01f,  5.4512000e-01f,  5.3429000e-01f,  5.2343000e-01f,  5.1254000e-01f,
                5.8320500e-01f,  5.7236000e-01f,  5.6148500e-01f,  5.5058000e-01f,  5.3964500e-01f,  5.2868000e-01f,  5.1768500e-01f,
                5.8898000e-01f,  5.7803000e-01f,  5.6705000e-01f,  5.5604000e-01f,  5.4500000e-01f,  5.3393000e-01f,  5.2283000e-01f,
                5.9475500e-01f,  5.8370000e-01f,  5.7261500e-01f,  5.6150000e-01f,  5.5035500e-01f,  5.3918000e-01f,  5.2797500e-01f,
                6.0053000e-01f,  5.8937000e-01f,  5.7818000e-01f,  5.6696000e-01f,  5.5571000e-01f,  5.4443000e-01f,  5.3312000e-01f,
                6.0630500e-01f,  5.9504000e-01f,  5.8374500e-01f,  5.7242000e-01f,  5.6106500e-01f,  5.4968000e-01f,  5.3826500e-01f,
                6.2363000e-01f,  6.1205000e-01f,  6.0044000e-01f,  5.8880000e-01f,  5.7713000e-01f,  5.6543000e-01f,  5.5370000e-01f,
                6.2940500e-01f,  6.1772000e-01f,  6.0600500e-01f,  5.9426000e-01f,  5.8248500e-01f,  5.7068000e-01f,  5.5884500e-01f,
                6.3518000e-01f,  6.2339000e-01f,  6.1157000e-01f,  5.9972000e-01f,  5.8784000e-01f,  5.7593000e-01f,  5.6399000e-01f,
                6.4095500e-01f,  6.2906000e-01f,  6.1713500e-01f,  6.0518000e-01f,  5.9319500e-01f,  5.8118000e-01f,  5.6913500e-01f,
                6.4673000e-01f,  6.3473000e-01f,  6.2270000e-01f,  6.1064000e-01f,  5.9855000e-01f,  5.8643000e-01f,  5.7428000e-01f,
                6.5250500e-01f,  6.4040000e-01f,  6.2826500e-01f,  6.1610000e-01f,  6.0390500e-01f,  5.9168000e-01f,  5.7942500e-01f,
                6.5828000e-01f,  6.4607000e-01f,  6.3383000e-01f,  6.2156000e-01f,  6.0926000e-01f,  5.9693000e-01f,  5.8457000e-01f,
                6.6405500e-01f,  6.5174000e-01f,  6.3939500e-01f,  6.2702000e-01f,  6.1461500e-01f,  6.0218000e-01f,  5.8971500e-01f,
                6.6983000e-01f,  6.5741000e-01f,  6.4496000e-01f,  6.3248000e-01f,  6.1997000e-01f,  6.0743000e-01f,  5.9486000e-01f,
                6.7560500e-01f,  6.6308000e-01f,  6.5052500e-01f,  6.3794000e-01f,  6.2532500e-01f,  6.1268000e-01f,  6.0000500e-01f,
                6.8138000e-01f,  6.6875000e-01f,  6.5609000e-01f,  6.4340000e-01f,  6.3068000e-01f,  6.1793000e-01f,  6.0515000e-01f,
                6.9870500e-01f,  6.8576000e-01f,  6.7278500e-01f,  6.5978000e-01f,  6.4674500e-01f,  6.3368000e-01f,  6.2058500e-01f,
                7.0448000e-01f,  6.9143000e-01f,  6.7835000e-01f,  6.6524000e-01f,  6.5210000e-01f,  6.3893000e-01f,  6.2573000e-01f,
                7.1025500e-01f,  6.9710000e-01f,  6.8391500e-01f,  6.7070000e-01f,  6.5745500e-01f,  6.4418000e-01f,  6.3087500e-01f,
                7.1603000e-01f,  7.0277000e-01f,  6.8948000e-01f,  6.7616000e-01f,  6.6281000e-01f,  6.4943000e-01f,  6.3602000e-01f,
                7.2180500e-01f,  7.0844000e-01f,  6.9504500e-01f,  6.8162000e-01f,  6.6816500e-01f,  6.5468000e-01f,  6.4116500e-01f,
                7.2758000e-01f,  7.1411000e-01f,  7.0061000e-01f,  6.8708000e-01f,  6.7352000e-01f,  6.5993000e-01f,  6.4631000e-01f,
                7.3335500e-01f,  7.1978000e-01f,  7.0617500e-01f,  6.9254000e-01f,  6.7887500e-01f,  6.6518000e-01f,  6.5145500e-01f,
                7.3913000e-01f,  7.2545000e-01f,  7.1174000e-01f,  6.9800000e-01f,  6.8423000e-01f,  6.7043000e-01f,  6.5660000e-01f,
                7.4490500e-01f,  7.3112000e-01f,  7.1730500e-01f,  7.0346000e-01f,  6.8958500e-01f,  6.7568000e-01f,  6.6174500e-01f,
                7.5068000e-01f,  7.3679000e-01f,  7.2287000e-01f,  7.0892000e-01f,  6.9494000e-01f,  6.8093000e-01f,  6.6689000e-01f,
                7.5645500e-01f,  7.4246000e-01f,  7.2843500e-01f,  7.1438000e-01f,  7.0029500e-01f,  6.8618000e-01f,  6.7203500e-01f,
                7.7378000e-01f,  7.5947000e-01f,  7.4513000e-01f,  7.3076000e-01f,  7.1636000e-01f,  7.0193000e-01f,  6.8747000e-01f,
                7.7955500e-01f,  7.6514000e-01f,  7.5069500e-01f,  7.3622000e-01f,  7.2171500e-01f,  7.0718000e-01f,  6.9261500e-01f,
                7.8533000e-01f,  7.7081000e-01f,  7.5626000e-01f,  7.4168000e-01f,  7.2707000e-01f,  7.1243000e-01f,  6.9776000e-01f,
                7.9110500e-01f,  7.7648000e-01f,  7.6182500e-01f,  7.4714000e-01f,  7.3242500e-01f,  7.1768000e-01f,  7.0290500e-01f,
                7.9688000e-01f,  7.8215000e-01f,  7.6739000e-01f,  7.5260000e-01f,  7.3778000e-01f,  7.2293000e-01f,  7.0805000e-01f,
                8.0265500e-01f,  7.8782000e-01f,  7.7295500e-01f,  7.5806000e-01f,  7.4313500e-01f,  7.2818000e-01f,  7.1319500e-01f,
                8.0843000e-01f,  7.9349000e-01f,  7.7852000e-01f,  7.6352000e-01f,  7.4849000e-01f,  7.3343000e-01f,  7.1834000e-01f,
                8.1420500e-01f,  7.9916000e-01f,  7.8408500e-01f,  7.6898000e-01f,  7.5384500e-01f,  7.3868000e-01f,  7.2348500e-01f,
                8.1998000e-01f,  8.0483000e-01f,  7.8965000e-01f,  7.7444000e-01f,  7.5920000e-01f,  7.4393000e-01f,  7.2863000e-01f,
                8.2575500e-01f,  8.1050000e-01f,  7.9521500e-01f,  7.7990000e-01f,  7.6455500e-01f,  7.4918000e-01f,  7.3377500e-01f,
                8.3153000e-01f,  8.1617000e-01f,  8.0078000e-01f,  7.8536000e-01f,  7.6991000e-01f,  7.5443000e-01f,  7.3892000e-01f,
                8.4885500e-01f,  8.3318000e-01f,  8.1747500e-01f,  8.0174000e-01f,  7.8597500e-01f,  7.7018000e-01f,  7.5435500e-01f,
                8.5463000e-01f,  8.3885000e-01f,  8.2304000e-01f,  8.0720000e-01f,  7.9133000e-01f,  7.7543000e-01f,  7.5950000e-01f,
                8.6040500e-01f,  8.4452000e-01f,  8.2860500e-01f,  8.1266000e-01f,  7.9668500e-01f,  7.8068000e-01f,  7.6464500e-01f,
                8.6618000e-01f,  8.5019000e-01f,  8.3417000e-01f,  8.1812000e-01f,  8.0204000e-01f,  7.8593000e-01f,  7.6979000e-01f,
                8.7195500e-01f,  8.5586000e-01f,  8.3973500e-01f,  8.2358000e-01f,  8.0739500e-01f,  7.9118000e-01f,  7.7493500e-01f,
                8.7773000e-01f,  8.6153000e-01f,  8.4530000e-01f,  8.2904000e-01f,  8.1275000e-01f,  7.9643000e-01f,  7.8008000e-01f,
                8.8350500e-01f,  8.6720000e-01f,  8.5086500e-01f,  8.3450000e-01f,  8.1810500e-01f,  8.0168000e-01f,  7.8522500e-01f,
                8.8928000e-01f,  8.7287000e-01f,  8.5643000e-01f,  8.3996000e-01f,  8.2346000e-01f,  8.0693000e-01f,  7.9037000e-01f,
                8.9505500e-01f,  8.7854000e-01f,  8.6199500e-01f,  8.4542000e-01f,  8.2881500e-01f,  8.1218000e-01f,  7.9551500e-01f,
                9.0083000e-01f,  8.8421000e-01f,  8.6756000e-01f,  8.5088000e-01f,  8.3417000e-01f,  8.1743000e-01f,  8.0066000e-01f,
                9.0660500e-01f,  8.8988000e-01f,  8.7312500e-01f,  8.5634000e-01f,  8.3952500e-01f,  8.2268000e-01f,  8.0580500e-01f,
                9.2393000e-01f,  9.0689000e-01f,  8.8982000e-01f,  8.7272000e-01f,  8.5559000e-01f,  8.3843000e-01f,  8.2124000e-01f,
                9.2970500e-01f,  9.1256000e-01f,  8.9538500e-01f,  8.7818000e-01f,  8.6094500e-01f,  8.4368000e-01f,  8.2638500e-01f,
                9.3548000e-01f,  9.1823000e-01f,  9.0095000e-01f,  8.8364000e-01f,  8.6630000e-01f,  8.4893000e-01f,  8.3153000e-01f,
                9.4125500e-01f,  9.2390000e-01f,  9.0651500e-01f,  8.8910000e-01f,  8.7165500e-01f,  8.5418000e-01f,  8.3667500e-01f,
                9.4703000e-01f,  9.2957000e-01f,  9.1208000e-01f,  8.9456000e-01f,  8.7701000e-01f,  8.5943000e-01f,  8.4182000e-01f,
                9.5280500e-01f,  9.3524000e-01f,  9.1764500e-01f,  9.0002000e-01f,  8.8236500e-01f,  8.6468000e-01f,  8.4696500e-01f,
                9.5858000e-01f,  9.4091000e-01f,  9.2321000e-01f,  9.0548000e-01f,  8.8772000e-01f,  8.6993000e-01f,  8.5211000e-01f,
                9.6435500e-01f,  9.4658000e-01f,  9.2877500e-01f,  9.1094000e-01f,  8.9307500e-01f,  8.7518000e-01f,  8.5725500e-01f,
                9.7013000e-01f,  9.5225000e-01f,  9.3434000e-01f,  9.1640000e-01f,  8.9843000e-01f,  8.8043000e-01f,  8.6240000e-01f,
                9.7590500e-01f,  9.5792000e-01f,  9.3990500e-01f,  9.2186000e-01f,  9.0378500e-01f,  8.8568000e-01f,  8.6754500e-01f,
                9.8168000e-01f,  9.6359000e-01f,  9.4547000e-01f,  9.2732000e-01f,  9.0914000e-01f,  8.9093000e-01f,  8.7269000e-01f,
                9.9900500e-01f,  9.8060000e-01f,  9.6216500e-01f,  9.4370000e-01f,  9.2520500e-01f,  9.0668000e-01f,  8.8812500e-01f,
                1.0047800e+00f,  9.8627000e-01f,  9.6773000e-01f,  9.4916000e-01f,  9.3056000e-01f,  9.1193000e-01f,  8.9327000e-01f,
                1.0105550e+00f,  9.9194000e-01f,  9.7329500e-01f,  9.5462000e-01f,  9.3591500e-01f,  9.1718000e-01f,  8.9841500e-01f,
                1.0163300e+00f,  9.9761000e-01f,  9.7886000e-01f,  9.6008000e-01f,  9.4127000e-01f,  9.2243000e-01f,  9.0356000e-01f,
                1.0221050e+00f,  1.0032800e+00f,  9.8442500e-01f,  9.6554000e-01f,  9.4662500e-01f,  9.2768000e-01f,  9.0870500e-01f,
                1.0278800e+00f,  1.0089500e+00f,  9.8999000e-01f,  9.7100000e-01f,  9.5198000e-01f,  9.3293000e-01f,  9.1385000e-01f,
                1.0336550e+00f,  1.0146200e+00f,  9.9555500e-01f,  9.7646000e-01f,  9.5733500e-01f,  9.3818000e-01f,  9.1899500e-01f,
                1.0394300e+00f,  1.0202900e+00f,  1.0011200e+00f,  9.8192000e-01f,  9.6269000e-01f,  9.4343000e-01f,  9.2414000e-01f,
                1.0452050e+00f,  1.0259600e+00f,  1.0066850e+00f,  9.8738000e-01f,  9.6804500e-01f,  9.4868000e-01f,  9.2928500e-01f,
                1.0509800e+00f,  1.0316300e+00f,  1.0122500e+00f,  9.9284000e-01f,  9.7340000e-01f,  9.5393000e-01f,  9.3443000e-01f,
                1.0567550e+00f,  1.0373000e+00f,  1.0178150e+00f,  9.9830000e-01f,  9.7875500e-01f,  9.5918000e-01f,  9.3957500e-01f,
                1.3743800e+00f,  1.3491500e+00f,  1.3238900e+00f,  1.2986000e+00f,  1.2732800e+00f,  1.2479300e+00f,  1.2225500e+00f,
                1.3801550e+00f,  1.3548200e+00f,  1.3294550e+00f,  1.3040600e+00f,  1.2786350e+00f,  1.2531800e+00f,  1.2276950e+00f,
                1.3859300e+00f,  1.3604900e+00f,  1.3350200e+00f,  1.3095200e+00f,  1.2839900e+00f,  1.2584300e+00f,  1.2328400e+00f,
                1.3917050e+00f,  1.3661600e+00f,  1.3405850e+00f,  1.3149800e+00f,  1.2893450e+00f,  1.2636800e+00f,  1.2379850e+00f,
                1.3974800e+00f,  1.3718300e+00f,  1.3461500e+00f,  1.3204400e+00f,  1.2947000e+00f,  1.2689300e+00f,  1.2431300e+00f,
                1.4032550e+00f,  1.3775000e+00f,  1.3517150e+00f,  1.3259000e+00f,  1.3000550e+00f,  1.2741800e+00f,  1.2482750e+00f,
                1.4090300e+00f,  1.3831700e+00f,  1.3572800e+00f,  1.3313600e+00f,  1.3054100e+00f,  1.2794300e+00f,  1.2534200e+00f,
                1.4148050e+00f,  1.3888400e+00f,  1.3628450e+00f,  1.3368200e+00f,  1.3107650e+00f,  1.2846800e+00f,  1.2585650e+00f,
                1.4205800e+00f,  1.3945100e+00f,  1.3684100e+00f,  1.3422800e+00f,  1.3161200e+00f,  1.2899300e+00f,  1.2637100e+00f,
                1.4263550e+00f,  1.4001800e+00f,  1.3739750e+00f,  1.3477400e+00f,  1.3214750e+00f,  1.2951800e+00f,  1.2688550e+00f,
                1.4321300e+00f,  1.4058500e+00f,  1.3795400e+00f,  1.3532000e+00f,  1.3268300e+00f,  1.3004300e+00f,  1.2740000e+00f,
                1.4494550e+00f,  1.4228600e+00f,  1.3962350e+00f,  1.3695800e+00f,  1.3428950e+00f,  1.3161800e+00f,  1.2894350e+00f,
                1.4552300e+00f,  1.4285300e+00f,  1.4018000e+00f,  1.3750400e+00f,  1.3482500e+00f,  1.3214300e+00f,  1.2945800e+00f,
                1.4610050e+00f,  1.4342000e+00f,  1.4073650e+00f,  1.3805000e+00f,  1.3536050e+00f,  1.3266800e+00f,  1.2997250e+00f,
                1.4667800e+00f,  1.4398700e+00f,  1.4129300e+00f,  1.3859600e+00f,  1.3589600e+00f,  1.3319300e+00f,  1.3048700e+00f,
                1.4725550e+00f,  1.4455400e+00f,  1.4184950e+00f,  1.3914200e+00f,  1.3643150e+00f,  1.3371800e+00f,  1.3100150e+00f,
                1.4783300e+00f,  1.4512100e+00f,  1.4240600e+00f,  1.3968800e+00f,  1.3696700e+00f,  1.3424300e+00f,  1.3151600e+00f,
                1.4841050e+00f,  1.4568800e+00f,  1.4296250e+00f,  1.4023400e+00f,  1.3750250e+00f,  1.3476800e+00f,  1.3203050e+00f,
                1.4898800e+00f,  1.4625500e+00f,  1.4351900e+00f,  1.4078000e+00f,  1.3803800e+00f,  1.3529300e+00f,  1.3254500e+00f,
                1.4956550e+00f,  1.4682200e+00f,  1.4407550e+00f,  1.4132600e+00f,  1.3857350e+00f,  1.3581800e+00f,  1.3305950e+00f,
                1.5014300e+00f,  1.4738900e+00f,  1.4463200e+00f,  1.4187200e+00f,  1.3910900e+00f,  1.3634300e+00f,  1.3357400e+00f,
                1.5072050e+00f,  1.4795600e+00f,  1.4518850e+00f,  1.4241800e+00f,  1.3964450e+00f,  1.3686800e+00f,  1.3408850e+00f,
                1.5245300e+00f,  1.4965700e+00f,  1.4685800e+00f,  1.4405600e+00f,  1.4125100e+00f,  1.3844300e+00f,  1.3563200e+00f,
                1.5303050e+00f,  1.5022400e+00f,  1.4741450e+00f,  1.4460200e+00f,  1.4178650e+00f,  1.3896800e+00f,  1.3614650e+00f,
                1.5360800e+00f,  1.5079100e+00f,  1.4797100e+00f,  1.4514800e+00f,  1.4232200e+00f,  1.3949300e+00f,  1.3666100e+00f,
                1.5418550e+00f,  1.5135800e+00f,  1.4852750e+00f,  1.4569400e+00f,  1.4285750e+00f,  1.4001800e+00f,  1.3717550e+00f,
                1.5476300e+00f,  1.5192500e+00f,  1.4908400e+00f,  1.4624000e+00f,  1.4339300e+00f,  1.4054300e+00f,  1.3769000e+00f,
                1.5534050e+00f,  1.5249200e+00f,  1.4964050e+00f,  1.4678600e+00f,  1.4392850e+00f,  1.4106800e+00f,  1.3820450e+00f,
                1.5591800e+00f,  1.5305900e+00f,  1.5019700e+00f,  1.4733200e+00f,  1.4446400e+00f,  1.4159300e+00f,  1.3871900e+00f,
                1.5649550e+00f,  1.5362600e+00f,  1.5075350e+00f,  1.4787800e+00f,  1.4499950e+00f,  1.4211800e+00f,  1.3923350e+00f,
                1.5707300e+00f,  1.5419300e+00f,  1.5131000e+00f,  1.4842400e+00f,  1.4553500e+00f,  1.4264300e+00f,  1.3974800e+00f,
                1.5765050e+00f,  1.5476000e+00f,  1.5186650e+00f,  1.4897000e+00f,  1.4607050e+00f,  1.4316800e+00f,  1.4026250e+00f,
                1.5822800e+00f,  1.5532700e+00f,  1.5242300e+00f,  1.4951600e+00f,  1.4660600e+00f,  1.4369300e+00f,  1.4077700e+00f,
                1.5996050e+00f,  1.5702800e+00f,  1.5409250e+00f,  1.5115400e+00f,  1.4821250e+00f,  1.4526800e+00f,  1.4232050e+00f,
                1.6053800e+00f,  1.5759500e+00f,  1.5464900e+00f,  1.5170000e+00f,  1.4874800e+00f,  1.4579300e+00f,  1.4283500e+00f,
                1.6111550e+00f,  1.5816200e+00f,  1.5520550e+00f,  1.5224600e+00f,  1.4928350e+00f,  1.4631800e+00f,  1.4334950e+00f,
                1.6169300e+00f,  1.5872900e+00f,  1.5576200e+00f,  1.5279200e+00f,  1.4981900e+00f,  1.4684300e+00f,  1.4386400e+00f,
                1.6227050e+00f,  1.5929600e+00f,  1.5631850e+00f,  1.5333800e+00f,  1.5035450e+00f,  1.4736800e+00f,  1.4437850e+00f,
                1.6284800e+00f,  1.5986300e+00f,  1.5687500e+00f,  1.5388400e+00f,  1.5089000e+00f,  1.4789300e+00f,  1.4489300e+00f,
                1.6342550e+00f,  1.6043000e+00f,  1.5743150e+00f,  1.5443000e+00f,  1.5142550e+00f,  1.4841800e+00f,  1.4540750e+00f,
                1.6400300e+00f,  1.6099700e+00f,  1.5798800e+00f,  1.5497600e+00f,  1.5196100e+00f,  1.4894300e+00f,  1.4592200e+00f,
                1.6458050e+00f,  1.6156400e+00f,  1.5854450e+00f,  1.5552200e+00f,  1.5249650e+00f,  1.4946800e+00f,  1.4643650e+00f,
                1.6515800e+00f,  1.6213100e+00f,  1.5910100e+00f,  1.5606800e+00f,  1.5303200e+00f,  1.4999300e+00f,  1.4695100e+00f,
                1.6573550e+00f,  1.6269800e+00f,  1.5965750e+00f,  1.5661400e+00f,  1.5356750e+00f,  1.5051800e+00f,  1.4746550e+00f,
                1.6746800e+00f,  1.6439900e+00f,  1.6132700e+00f,  1.5825200e+00f,  1.5517400e+00f,  1.5209300e+00f,  1.4900900e+00f,
                1.6804550e+00f,  1.6496600e+00f,  1.6188350e+00f,  1.5879800e+00f,  1.5570950e+00f,  1.5261800e+00f,  1.4952350e+00f,
                1.6862300e+00f,  1.6553300e+00f,  1.6244000e+00f,  1.5934400e+00f,  1.5624500e+00f,  1.5314300e+00f,  1.5003800e+00f,
                1.6920050e+00f,  1.6610000e+00f,  1.6299650e+00f,  1.5989000e+00f,  1.5678050e+00f,  1.5366800e+00f,  1.5055250e+00f,
                1.6977800e+00f,  1.6666700e+00f,  1.6355300e+00f,  1.6043600e+00f,  1.5731600e+00f,  1.5419300e+00f,  1.5106700e+00f,
                1.7035550e+00f,  1.6723400e+00f,  1.6410950e+00f,  1.6098200e+00f,  1.5785150e+00f,  1.5471800e+00f,  1.5158150e+00f,
                1.7093300e+00f,  1.6780100e+00f,  1.6466600e+00f,  1.6152800e+00f,  1.5838700e+00f,  1.5524300e+00f,  1.5209600e+00f,
                1.7151050e+00f,  1.6836800e+00f,  1.6522250e+00f,  1.6207400e+00f,  1.5892250e+00f,  1.5576800e+00f,  1.5261050e+00f,
                1.7208800e+00f,  1.6893500e+00f,  1.6577900e+00f,  1.6262000e+00f,  1.5945800e+00f,  1.5629300e+00f,  1.5312500e+00f,
                1.7266550e+00f,  1.6950200e+00f,  1.6633550e+00f,  1.6316600e+00f,  1.5999350e+00f,  1.5681800e+00f,  1.5363950e+00f,
                1.7324300e+00f,  1.7006900e+00f,  1.6689200e+00f,  1.6371200e+00f,  1.6052900e+00f,  1.5734300e+00f,  1.5415400e+00f,
                1.7497550e+00f,  1.7177000e+00f,  1.6856150e+00f,  1.6535000e+00f,  1.6213550e+00f,  1.5891800e+00f,  1.5569750e+00f,
                1.7555300e+00f,  1.7233700e+00f,  1.6911800e+00f,  1.6589600e+00f,  1.6267100e+00f,  1.5944300e+00f,  1.5621200e+00f,
                1.7613050e+00f,  1.7290400e+00f,  1.6967450e+00f,  1.6644200e+00f,  1.6320650e+00f,  1.5996800e+00f,  1.5672650e+00f,
                1.7670800e+00f,  1.7347100e+00f,  1.7023100e+00f,  1.6698800e+00f,  1.6374200e+00f,  1.6049300e+00f,  1.5724100e+00f,
                1.7728550e+00f,  1.7403800e+00f,  1.7078750e+00f,  1.6753400e+00f,  1.6427750e+00f,  1.6101800e+00f,  1.5775550e+00f,
                1.7786300e+00f,  1.7460500e+00f,  1.7134400e+00f,  1.6808000e+00f,  1.6481300e+00f,  1.6154300e+00f,  1.5827000e+00f,
                1.7844050e+00f,  1.7517200e+00f,  1.7190050e+00f,  1.6862600e+00f,  1.6534850e+00f,  1.6206800e+00f,  1.5878450e+00f,
                1.7901800e+00f,  1.7573900e+00f,  1.7245700e+00f,  1.6917200e+00f,  1.6588400e+00f,  1.6259300e+00f,  1.5929900e+00f,
                1.7959550e+00f,  1.7630600e+00f,  1.7301350e+00f,  1.6971800e+00f,  1.6641950e+00f,  1.6311800e+00f,  1.5981350e+00f,
                1.8017300e+00f,  1.7687300e+00f,  1.7357000e+00f,  1.7026400e+00f,  1.6695500e+00f,  1.6364300e+00f,  1.6032800e+00f,
                1.8075050e+00f,  1.7744000e+00f,  1.7412650e+00f,  1.7081000e+00f,  1.6749050e+00f,  1.6416800e+00f,  1.6084250e+00f,
                1.8248300e+00f,  1.7914100e+00f,  1.7579600e+00f,  1.7244800e+00f,  1.6909700e+00f,  1.6574300e+00f,  1.6238600e+00f,
                1.8306050e+00f,  1.7970800e+00f,  1.7635250e+00f,  1.7299400e+00f,  1.6963250e+00f,  1.6626800e+00f,  1.6290050e+00f,
                1.8363800e+00f,  1.8027500e+00f,  1.7690900e+00f,  1.7354000e+00f,  1.7016800e+00f,  1.6679300e+00f,  1.6341500e+00f,
                1.8421550e+00f,  1.8084200e+00f,  1.7746550e+00f,  1.7408600e+00f,  1.7070350e+00f,  1.6731800e+00f,  1.6392950e+00f,
                1.8479300e+00f,  1.8140900e+00f,  1.7802200e+00f,  1.7463200e+00f,  1.7123900e+00f,  1.6784300e+00f,  1.6444400e+00f,
                1.8537050e+00f,  1.8197600e+00f,  1.7857850e+00f,  1.7517800e+00f,  1.7177450e+00f,  1.6836800e+00f,  1.6495850e+00f,
                1.8594800e+00f,  1.8254300e+00f,  1.7913500e+00f,  1.7572400e+00f,  1.7231000e+00f,  1.6889300e+00f,  1.6547300e+00f,
                1.8652550e+00f,  1.8311000e+00f,  1.7969150e+00f,  1.7627000e+00f,  1.7284550e+00f,  1.6941800e+00f,  1.6598750e+00f,
                1.8710300e+00f,  1.8367700e+00f,  1.8024800e+00f,  1.7681600e+00f,  1.7338100e+00f,  1.6994300e+00f,  1.6650200e+00f,
                1.8768050e+00f,  1.8424400e+00f,  1.8080450e+00f,  1.7736200e+00f,  1.7391650e+00f,  1.7046800e+00f,  1.6701650e+00f,
                1.8825800e+00f,  1.8481100e+00f,  1.8136100e+00f,  1.7790800e+00f,  1.7445200e+00f,  1.7099300e+00f,  1.6753100e+00f,
                1.8999050e+00f,  1.8651200e+00f,  1.8303050e+00f,  1.7954600e+00f,  1.7605850e+00f,  1.7256800e+00f,  1.6907450e+00f,
                1.9056800e+00f,  1.8707900e+00f,  1.8358700e+00f,  1.8009200e+00f,  1.7659400e+00f,  1.7309300e+00f,  1.6958900e+00f,
                1.9114550e+00f,  1.8764600e+00f,  1.8414350e+00f,  1.8063800e+00f,  1.7712950e+00f,  1.7361800e+00f,  1.7010350e+00f,
                1.9172300e+00f,  1.8821300e+00f,  1.8470000e+00f,  1.8118400e+00f,  1.7766500e+00f,  1.7414300e+00f,  1.7061800e+00f,
                1.9230050e+00f,  1.8878000e+00f,  1.8525650e+00f,  1.8173000e+00f,  1.7820050e+00f,  1.7466800e+00f,  1.7113250e+00f,
                1.9287800e+00f,  1.8934700e+00f,  1.8581300e+00f,  1.8227600e+00f,  1.7873600e+00f,  1.7519300e+00f,  1.7164700e+00f,
                1.9345550e+00f,  1.8991400e+00f,  1.8636950e+00f,  1.8282200e+00f,  1.7927150e+00f,  1.7571800e+00f,  1.7216150e+00f,
                1.9403300e+00f,  1.9048100e+00f,  1.8692600e+00f,  1.8336800e+00f,  1.7980700e+00f,  1.7624300e+00f,  1.7267600e+00f,
                1.9461050e+00f,  1.9104800e+00f,  1.8748250e+00f,  1.8391400e+00f,  1.8034250e+00f,  1.7676800e+00f,  1.7319050e+00f,
                1.9518800e+00f,  1.9161500e+00f,  1.8803900e+00f,  1.8446000e+00f,  1.8087800e+00f,  1.7729300e+00f,  1.7370500e+00f,
                1.9576550e+00f,  1.9218200e+00f,  1.8859550e+00f,  1.8500600e+00f,  1.8141350e+00f,  1.7781800e+00f,  1.7421950e+00f,
                1.9749800e+00f,  1.9388300e+00f,  1.9026500e+00f,  1.8664400e+00f,  1.8302000e+00f,  1.7939300e+00f,  1.7576300e+00f,
                1.9807550e+00f,  1.9445000e+00f,  1.9082150e+00f,  1.8719000e+00f,  1.8355550e+00f,  1.7991800e+00f,  1.7627750e+00f,
                1.9865300e+00f,  1.9501700e+00f,  1.9137800e+00f,  1.8773600e+00f,  1.8409100e+00f,  1.8044300e+00f,  1.7679200e+00f,
                1.9923050e+00f,  1.9558400e+00f,  1.9193450e+00f,  1.8828200e+00f,  1.8462650e+00f,  1.8096800e+00f,  1.7730650e+00f,
                1.9980800e+00f,  1.9615100e+00f,  1.9249100e+00f,  1.8882800e+00f,  1.8516200e+00f,  1.8149300e+00f,  1.7782100e+00f,
                2.0038550e+00f,  1.9671800e+00f,  1.9304750e+00f,  1.8937400e+00f,  1.8569750e+00f,  1.8201800e+00f,  1.7833550e+00f,
                2.0096300e+00f,  1.9728500e+00f,  1.9360400e+00f,  1.8992000e+00f,  1.8623300e+00f,  1.8254300e+00f,  1.7885000e+00f,
                2.0154050e+00f,  1.9785200e+00f,  1.9416050e+00f,  1.9046600e+00f,  1.8676850e+00f,  1.8306800e+00f,  1.7936450e+00f,
                2.0211800e+00f,  1.9841900e+00f,  1.9471700e+00f,  1.9101200e+00f,  1.8730400e+00f,  1.8359300e+00f,  1.7987900e+00f,
                2.0269550e+00f,  1.9898600e+00f,  1.9527350e+00f,  1.9155800e+00f,  1.8783950e+00f,  1.8411800e+00f,  1.8039350e+00f,
                2.0327300e+00f,  1.9955300e+00f,  1.9583000e+00f,  1.9210400e+00f,  1.8837500e+00f,  1.8464300e+00f,  1.8090800e+00f,
                2.0500550e+00f,  2.0125400e+00f,  1.9749950e+00f,  1.9374200e+00f,  1.8998150e+00f,  1.8621800e+00f,  1.8245150e+00f,
                2.0558300e+00f,  2.0182100e+00f,  1.9805600e+00f,  1.9428800e+00f,  1.9051700e+00f,  1.8674300e+00f,  1.8296600e+00f,
                2.0616050e+00f,  2.0238800e+00f,  1.9861250e+00f,  1.9483400e+00f,  1.9105250e+00f,  1.8726800e+00f,  1.8348050e+00f,
                2.0673800e+00f,  2.0295500e+00f,  1.9916900e+00f,  1.9538000e+00f,  1.9158800e+00f,  1.8779300e+00f,  1.8399500e+00f,
                2.0731550e+00f,  2.0352200e+00f,  1.9972550e+00f,  1.9592600e+00f,  1.9212350e+00f,  1.8831800e+00f,  1.8450950e+00f,
                2.0789300e+00f,  2.0408900e+00f,  2.0028200e+00f,  1.9647200e+00f,  1.9265900e+00f,  1.8884300e+00f,  1.8502400e+00f,
                2.0847050e+00f,  2.0465600e+00f,  2.0083850e+00f,  1.9701800e+00f,  1.9319450e+00f,  1.8936800e+00f,  1.8553850e+00f,
                2.0904800e+00f,  2.0522300e+00f,  2.0139500e+00f,  1.9756400e+00f,  1.9373000e+00f,  1.8989300e+00f,  1.8605300e+00f,
                2.0962550e+00f,  2.0579000e+00f,  2.0195150e+00f,  1.9811000e+00f,  1.9426550e+00f,  1.9041800e+00f,  1.8656750e+00f,
                2.1020300e+00f,  2.0635700e+00f,  2.0250800e+00f,  1.9865600e+00f,  1.9480100e+00f,  1.9094300e+00f,  1.8708200e+00f,
                2.1078050e+00f,  2.0692400e+00f,  2.0306450e+00f,  1.9920200e+00f,  1.9533650e+00f,  1.9146800e+00f,  1.8759650e+00f,
                2.1251300e+00f,  2.0862500e+00f,  2.0473400e+00f,  2.0084000e+00f,  1.9694300e+00f,  1.9304300e+00f,  1.8914000e+00f,
                2.1309050e+00f,  2.0919200e+00f,  2.0529050e+00f,  2.0138600e+00f,  1.9747850e+00f,  1.9356800e+00f,  1.8965450e+00f,
                2.1366800e+00f,  2.0975900e+00f,  2.0584700e+00f,  2.0193200e+00f,  1.9801400e+00f,  1.9409300e+00f,  1.9016900e+00f,
                2.1424550e+00f,  2.1032600e+00f,  2.0640350e+00f,  2.0247800e+00f,  1.9854950e+00f,  1.9461800e+00f,  1.9068350e+00f,
                2.1482300e+00f,  2.1089300e+00f,  2.0696000e+00f,  2.0302400e+00f,  1.9908500e+00f,  1.9514300e+00f,  1.9119800e+00f,
                2.1540050e+00f,  2.1146000e+00f,  2.0751650e+00f,  2.0357000e+00f,  1.9962050e+00f,  1.9566800e+00f,  1.9171250e+00f,
                2.1597800e+00f,  2.1202700e+00f,  2.0807300e+00f,  2.0411600e+00f,  2.0015600e+00f,  1.9619300e+00f,  1.9222700e+00f,
                2.1655550e+00f,  2.1259400e+00f,  2.0862950e+00f,  2.0466200e+00f,  2.0069150e+00f,  1.9671800e+00f,  1.9274150e+00f,
                2.1713300e+00f,  2.1316100e+00f,  2.0918600e+00f,  2.0520800e+00f,  2.0122700e+00f,  1.9724300e+00f,  1.9325600e+00f,
                2.1771050e+00f,  2.1372800e+00f,  2.0974250e+00f,  2.0575400e+00f,  2.0176250e+00f,  1.9776800e+00f,  1.9377050e+00f,
                2.1828800e+00f,  2.1429500e+00f,  2.1029900e+00f,  2.0630000e+00f,  2.0229800e+00f,  1.9829300e+00f,  1.9428500e+00f,
                2.2002050e+00f,  2.1599600e+00f,  2.1196850e+00f,  2.0793800e+00f,  2.0390450e+00f,  1.9986800e+00f,  1.9582850e+00f,
                2.2059800e+00f,  2.1656300e+00f,  2.1252500e+00f,  2.0848400e+00f,  2.0444000e+00f,  2.0039300e+00f,  1.9634300e+00f,
                2.2117550e+00f,  2.1713000e+00f,  2.1308150e+00f,  2.0903000e+00f,  2.0497550e+00f,  2.0091800e+00f,  1.9685750e+00f,
                2.2175300e+00f,  2.1769700e+00f,  2.1363800e+00f,  2.0957600e+00f,  2.0551100e+00f,  2.0144300e+00f,  1.9737200e+00f,
                2.2233050e+00f,  2.1826400e+00f,  2.1419450e+00f,  2.1012200e+00f,  2.0604650e+00f,  2.0196800e+00f,  1.9788650e+00f,
                2.2290800e+00f,  2.1883100e+00f,  2.1475100e+00f,  2.1066800e+00f,  2.0658200e+00f,  2.0249300e+00f,  1.9840100e+00f,
                2.2348550e+00f,  2.1939800e+00f,  2.1530750e+00f,  2.1121400e+00f,  2.0711750e+00f,  2.0301800e+00f,  1.9891550e+00f,
                2.2406300e+00f,  2.1996500e+00f,  2.1586400e+00f,  2.1176000e+00f,  2.0765300e+00f,  2.0354300e+00f,  1.9943000e+00f,
                2.2464050e+00f,  2.2053200e+00f,  2.1642050e+00f,  2.1230600e+00f,  2.0818850e+00f,  2.0406800e+00f,  1.9994450e+00f,
                2.2521800e+00f,  2.2109900e+00f,  2.1697700e+00f,  2.1285200e+00f,  2.0872400e+00f,  2.0459300e+00f,  2.0045900e+00f,
                2.2579550e+00f,  2.2166600e+00f,  2.1753350e+00f,  2.1339800e+00f,  2.0925950e+00f,  2.0511800e+00f,  2.0097350e+00f,
                2.2752800e+00f,  2.2336700e+00f,  2.1920300e+00f,  2.1503600e+00f,  2.1086600e+00f,  2.0669300e+00f,  2.0251700e+00f,
                2.2810550e+00f,  2.2393400e+00f,  2.1975950e+00f,  2.1558200e+00f,  2.1140150e+00f,  2.0721800e+00f,  2.0303150e+00f,
                2.2868300e+00f,  2.2450100e+00f,  2.2031600e+00f,  2.1612800e+00f,  2.1193700e+00f,  2.0774300e+00f,  2.0354600e+00f,
                2.2926050e+00f,  2.2506800e+00f,  2.2087250e+00f,  2.1667400e+00f,  2.1247250e+00f,  2.0826800e+00f,  2.0406050e+00f,
                2.2983800e+00f,  2.2563500e+00f,  2.2142900e+00f,  2.1722000e+00f,  2.1300800e+00f,  2.0879300e+00f,  2.0457500e+00f,
                2.3041550e+00f,  2.2620200e+00f,  2.2198550e+00f,  2.1776600e+00f,  2.1354350e+00f,  2.0931800e+00f,  2.0508950e+00f,
                2.3099300e+00f,  2.2676900e+00f,  2.2254200e+00f,  2.1831200e+00f,  2.1407900e+00f,  2.0984300e+00f,  2.0560400e+00f,
                2.3157050e+00f,  2.2733600e+00f,  2.2309850e+00f,  2.1885800e+00f,  2.1461450e+00f,  2.1036800e+00f,  2.0611850e+00f,
                2.3214800e+00f,  2.2790300e+00f,  2.2365500e+00f,  2.1940400e+00f,  2.1515000e+00f,  2.1089300e+00f,  2.0663300e+00f,
                2.3272550e+00f,  2.2847000e+00f,  2.2421150e+00f,  2.1995000e+00f,  2.1568550e+00f,  2.1141800e+00f,  2.0714750e+00f,
                2.3330300e+00f,  2.2903700e+00f,  2.2476800e+00f,  2.2049600e+00f,  2.1622100e+00f,  2.1194300e+00f,  2.0766200e+00f,
            };

            float[] y_actual = y.ToArray();

            AssertError.Tolerance(y_expect, y_actual, 1e-7f, 1e-5f, $"mismatch value {channels},{kwidth},{inwidth},{inheight},{batch}");
        }
    }
}
